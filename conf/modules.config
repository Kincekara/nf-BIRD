/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // all modules
    publishDir = [
        path: { "${params.outdir}/${samplename}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // module specific options
    withName: 'FASTP' {
        ext.args = [
            "--length_required ${params.minlen}",
            "--average_qual ${params.read_quality}",
            "--cut_front_window_size ${params.leading}",
            "--cut_front_mean_quality ${params.front_mean_quality}",
            "-3",
            "--cut_tail_window_size ${params.trailing}",
            "--cut_tail_mean_quality ${params.tail_mean_quality}",
            "-r",
            "--cut_right_window_size ${params.window_size}",
            "--cut_right_mean_quality ${params.right_mean_quality}"
        ]
    }

    withName: 'ASSEMBLY_PREP' {
        ext.args = {[
            normalization: params.normalization,
            norm_target: params.norm_target,
            min_depth: params.min_depth,
            read_threshold: params.read_threshold
        ]}
    }

    withName: 'PROFILE' {
        ext.args = "--minimum-hit-groups ${params.min_hit_groups}"
        ext.args2 = "-r ${params.bracken_read_len} -t ${params.bracken_threshold}"
    }

    withName: 'TBLASTN' {
        ext.args = [
            "-evalue ${params.evalue}",
            "-max_hsps ${params.max_hsps}"
        ]
        ext.args2 = params.percent_identity
    }

    withName: 'GENERATE_REPORT' {
        ext.args = [
            "-n ${params.disclaimer}",
            "-l ${params.logo1}",
            "-r ${params.logo2}",
            "-hl1 ${params.header_line1}",
            "-hl2 ${params.header_line2}",
            "-hl3 ${params.header_line3}",
            "-hl4 ${params.header_line4}",
            "-hl5 ${params.header_line5}",
            "-hl6 ${params.header_line6}"
        ]
        ext.args2 = params.html_footer
        ext.args3 = {[
            version: "nf-BIRD ${workflow.manifest.version}",
            date: new Date().format('yyyy-MM-dd')
        ]}
    }
}